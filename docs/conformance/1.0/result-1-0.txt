Test [1/197] cl_basic_generation: General test of command line generation

Test [2/197] nested_prefixes_arrays: Test nested prefixes with arrays

Test [3/197] nested_cl_bindings: Test nested command line bindings

Test [4/197] cl_optional_inputs_missing: Test command line with optional input (missing)

Test [5/197] cl_optional_bindings_provided: Test command line with optional input (provided)

Test [6/197] initworkdir_expreng_requirements: Test InitialWorkDirRequirement ExpressionEngineRequirement.engineConfig feature

Test [7/197] stdout_redirect_docker: Test command execution in Docker with stdout redirection

Test [8/197] stdout_redirect_shortcut_docker: Test command execution in Docker with shortcut stdout redirection

Test [9/197] stdout_redirect_mediumcut_docker: Test command execution in Docker with mediumcut stdout redirection

Test [10/197] stderr_redirect: Test command line with stderr redirection

Test [11/197] stderr_redirect_shortcut: Test command line with stderr redirection, brief syntax

Test [12/197] stderr_redirect_mediumcut: Test command line with stderr redirection, named brief syntax

Test [13/197] stdinout_redirect_docker: Test command execution in Docker with stdin and stdout redirection

Test [14/197] expression_any: Test default usage of Any in expressions.

Test [15/197] expression_any_null: Test explicitly passing null to Any type inputs with default values.

Test [16/197] expression_any_string: Testing the string 'null' does not trip up an Any with a default value.

Test [17/197] expression_any_nodefaultany: Test Any without defaults cannot be unspecified.

Test [18/197] expression_any_null_nodefaultany: Test explicitly passing null to Any type without a default value.

Test [19/197] expression_any_nullstring_nodefaultany: Testing the string 'null' does not trip up an Any without a default value.

Test [20/197] any_outputSource_compatibility: Testing Any type compatibility in outputSource

Test [21/197] stdinout_redirect: Test command execution in with stdin and stdout redirection

Test [22/197] expression_parseint: Test ExpressionTool with Javascript engine

Test [23/197] expression_outputEval: Test outputEval to transform output

Test [24/197] wf_wc_parseInt: Test two step workflow with imported tools

Test [25/197] wf_wc_expressiontool: Test two step workflow with inline tools

Test [26/197] wf_wc_scatter: Test single step workflow with Scatter step

Test [27/197] wf_wc_scatter_multiple_merge: Test single step workflow with Scatter step and two data links connected to same input, default merge behavior

Test [28/197] wf_wc_scatter_multiple_nested: Test single step workflow with Scatter step and two data links connected to same input, nested merge behavior

Test [29/197] wf_wc_scatter_multiple_flattened: Test single step workflow with Scatter step and two data links connected to same input, flattened merge behavior

Test [30/197] wf_wc_nomultiple: Test that no MultipleInputFeatureRequirement is necessary when workflow step source is a single-item list

Test [31/197] wf_input_default_missing: Test workflow with default value for input parameter (missing)

Test [32/197] wf_input_default_provided: Test workflow with default value for input parameter (provided)

Test [33/197] wf_default_tool_default: Test that workflow defaults override tool defaults

Test [34/197] envvar_req: Test EnvVarRequirement

Test [35/197] wf_scatter_single_param: Test workflow scatter with single scatter parameter

Test [36/197] wf_scatter_two_nested_crossproduct: Test workflow scatter with two scatter parameters and nested_crossproduct join method

Test [37/197] wf_scatter_two_flat_crossproduct: Test workflow scatter with two scatter parameters and flat_crossproduct join method

Test [38/197] wf_scatter_two_dotproduct: Test workflow scatter with two scatter parameters and dotproduct join method

Test [39/197] wf_scatter_emptylist: Test workflow scatter with single empty list parameter

Test [40/197] wf_scatter_nested_crossproduct_secondempty: Test workflow scatter with two scatter parameters and nested_crossproduct join method with second list empty

Test [41/197] wf_scatter_nested_crossproduct_firstempty: Test workflow scatter with two scatter parameters and nested_crossproduct join method with first list empty

Test [42/197] wf_scatter_flat_crossproduct_oneempty: Test workflow scatter with two scatter parameters, one of which is empty and flat_crossproduct join method

Test [43/197] wf_scatter_dotproduct_twoempty: Test workflow scatter with two empty scatter parameters and dotproduct join method

Test [44/197] any_input_param: Test Any type input parameter

Test [45/197] nested_workflow: Test nested workflow

Test [46/197] requirement_priority: Test requirement priority

Test [47/197] requirement_override_hints: Test requirements override hints

Test [48/197] requirement_workflow_steps: Test requirements on workflow steps

Test [49/197] step_input_default_value: Test default value on step input parameter

Test [50/197] step_input_default_value_nosource: Test use default value on step input parameter with empty source

Test [51/197] step_input_default_value_nullsource: Test use default value on step input parameter with null source

Test [52/197] step_input_default_value_overriden: Test default value on step input parameter overridden by provided source

Test [53/197] wf_simple: Test simple workflow

Test [54/197] hints_unknown_ignored: Test unknown hints are ignored.

Test [55/197] initial_workdir_secondary_files_expr: Test InitialWorkDirRequirement linking input files and capturing secondaryFiles on input and output. Also tests the use of a variety of parameter references and expressions in the secondaryFiles field.

Test [56/197] rename: Test InitialWorkDirRequirement with expression in filename.

Test [57/197] initial_workdir_trailingnl: Test if trailing newline is present in file entry in InitialWorkDir

Test [58/197] inline_expressions: Test inline expressions

Test [59/197] schemadef_req_tool_param: Test SchemaDefRequirement definition used in tool parameter

Test [60/197] schemadef_req_wf_param: Test SchemaDefRequirement definition used in workflow parameter

Test [61/197] param_evaluation_noexpr: Test parameter evaluation, no support for JS expressions

Test [62/197] param_evaluation_expr: Test parameter evaluation, with support for JS expressions

Test [63/197] metadata: Test metadata

Test [64/197] format_checking: Test simple format checking.

Test [65/197] format_checking_subclass: Test format checking against ontology using subclassOf.

Test [66/197] format_checking_equivalentclass: Test format checking against ontology using equivalentClass.

Test [67/197] output_secondaryfile_optional: Test optional output file and optional secondaryFile on output.

Test [68/197] valuefrom_ignored_null: Test that valueFrom is ignored when the parameter is null

Test [69/197] valuefrom_secondexpr_ignored: Test that second expression in concatenated valueFrom is not ignored

Test [70/197] valuefrom_wf_step: Test valueFrom on workflow step.

Test [71/197] valuefrom_wf_step_multiple: Test valueFrom on workflow step with multiple sources

Test [72/197] valuefrom_wf_step_other: Test valueFrom on workflow step referencing other inputs

Test [73/197] record_output_binding: Test record type output binding.

Test [74/197] docker_json_output_path: Test support for reading cwl.output.json when running in a Docker container and just 'path' is provided.

Test [75/197] docker_json_output_location: Test support for reading cwl.output.json when running in a Docker container and just 'location' is provided.

Test [76/197] multiple_glob_expr_list: Test support for returning multiple glob patterns from expression

Test [77/197] wf_scatter_oneparam_valuefrom: Test workflow scatter with single scatter parameter and two valueFrom on step input (first and current el)

Test [78/197] wf_scatter_twoparam_nested_crossproduct_valuefrom: Test workflow scatter with two scatter parameters and nested_crossproduct join method and valueFrom on step input

Test [79/197] wf_scatter_twoparam_flat_crossproduct_valuefrom: Test workflow scatter with two scatter parameters and flat_crossproduct join method and valueFrom on step input

Test [80/197] wf_scatter_twoparam_dotproduct_valuefrom: Test workflow scatter with two scatter parameters and dotproduct join method and valueFrom on step input

Test [81/197] wf_scatter_oneparam_valuefrom_twice_current_el: Test workflow scatter with single scatter parameter and two valueFrom on step input (current el twice)

Test [82/197] wf_scatter_oneparam_valueFrom: Test valueFrom eval on scattered input parameter

Test [83/197] wf_two_inputfiles_namecollision: Test workflow two input files with same name.

Test [84/197] directory_input_param_ref: Test directory input with parameter reference

Test [85/197] directory_input_docker: Test directory input in Docker

Test [86/197] directory_output: Test directory output

Test [87/197] directory_secondaryfiles: Test directories in secondaryFiles

Test [88/197] dynamic_initial_workdir: Test dynamic initial work dir

Test [89/197] writable_stagedfiles: Test writable staged files.

Test [90/197] input_file_literal: Test file literal as input

Test [91/197] initial_workdir_expr: Test expression in InitialWorkDir listing

Test [92/197] nameroot_nameext_stdout_expr: Test nameroot/nameext expression in arguments, stdout

Test [93/197] input_dir_inputbinding: Test directory input with inputBinding

Test [94/197] cl_gen_arrayofarrays: Test command line generation of array-of-arrays

Test [95/197] env_home_tmpdir: Test $HOME and $TMPDIR are set correctly

Test [96/197] env_home_tmpdir_docker: Test $HOME and $TMPDIR are set correctly in Docker

Test [97/197] expressionlib_tool_wf_override: Test that expressionLib requirement of individual tool step overrides expressionLib of workflow.

Test [98/197] initial_workdir_output: Test output of InitialWorkDir

Test [99/197] embedded_subworkflow: Test embedded subworkflow

Test [100/197] filesarray_secondaryfiles: Test secondaryFiles on array of files.

Test [101/197] exprtool_directory_literal: Test directory literal output created by ExpressionTool

Test [102/197] exprtool_file_literal: Test file literal output created by ExpressionTool

Test [103/197] dockeroutputdir: Test dockerOutputDirectory

Test [104/197] hints_import: Test hints with $import

Test [105/197] default_path_notfound_warning: Test warning instead of error when default path is not found

Test [106/197] inlinejs_req_expressions: Test InlineJavascriptRequirement with multiple expressions in the same tool

Test [107/197] input_dir_recurs_copy_writable: Test if a writable input directory is recursively copied and writable

Test [108/197] null_missing_params: Test that missing parameters are null (not undefined) in expression

Test [109/197] param_notnull_expr: Test that provided parameter is not null in expression

Test [110/197] wf_compound_doc: Test compound workflow document

Test [111/197] nameroot_nameext_generated: Test that nameroot and nameext are generated from basename at execution time by the runner

Test [112/197] initialworkpath_output: Test that file path in $(inputs) for initialworkdir is in $(outdir).

Test [113/197] wf_scatter_twopar_oneinput_flattenedmerge: Test single step workflow with Scatter step and two data links connected to same input, flattened merge behavior. Workflow inputs are set as list

Test [114/197] wf_multiplesources_multipletypes: Test step input with multiple sources with multiple types

Test [115/197] shelldir_notinterpreted: Test that shell directives are not interpreted.

Test [116/197] shelldir_quoted: Test that shell directives are quoted.

Test [117/197] initial_workdir_empty_writable: Test empty writable dir with InitialWorkDirRequirement

Test [118/197] initial_workdir_empty_writable_docker: Test empty writable dir with InitialWorkDirRequirement inside Docker

Test [119/197] dynamic_resreq_inputs: Test dynamic resource reqs referencing inputs

Test [120/197] fileliteral_input_docker: Test file literal as input without Docker

Test [121/197] outputbinding_glob_sorted: Test that OutputBinding.glob is sorted as specified by POSIX

Test [122/197] initialworkdir_nesteddir: Test InitialWorkDirRequirement with a nested directory structure from another step

Test [123/197] booleanflags_cl_noinputbinding: Test that boolean flags do not appear on command line if inputBinding is empty and not null

Test [124/197] expr_reference_self_noinput: Test that expression engine does not fail to evaluate reference to self with unprovided input

Test [125/197] success_codes: Test successCodes

Test [126/197] dynamic_resreq_wf: Test simple workflow with a dynamic resource requirement

Test [127/197] cl_empty_array_input: Test that empty array input does not add anything to command line

Test [128/197] resreq_step_overrides_wf: Test that ResourceRequirement on a step level redefines requirement on the workflow level

Test [129/197] valuefrom_constant_overrides_inputs: Test valueFrom with constant value overriding provided array inputs

Test [130/197] dynamic_resreq_filesizes: Test dynamic resource reqs referencing the size of Files inside a Directory

Test [131/197] wf_step_connect_undeclared_param: Test that it is not an error to connect a parameter to a workflow step, even if the parameter doesn't appear in the `run` process inputs.

Test [132/197] wf_step_access_undeclared_param: Test that parameters that don't appear in the `run` process inputs are not present in the input object used to run the tool.

Test [133/197] env_home_tmpdir_docker: Test $HOME and $TMPDIR are set correctly in Docker without using return code

Test [134/197] wf_scatter_oneparam_valuefrom_inputs: Test workflow scatter with single scatter parameter and two valueFrom using $inputs (first and current el)

Test [135/197] packed_import_schema: SchemaDefRequirement with $import, and packed

Test [136/197] job_input_secondary_subdirs: Test specifying secondaryFiles in subdirectories of the job input document.

Test [137/197] job_input_subdir_primary_and_secondary_subdirs: Test specifying secondaryFiles in same subdirectory of the job input as the primary input file.

Test [138/197] scatter_embedded_subworkflow: Test simple scatter over an embedded subworkflow

Test [139/197] scatter_multi_input_embedded_subworkflow: Test simple multiple input scatter over an embedded subworkflow

Test [140/197] workflow_embedded_subworkflow_embedded_subsubworkflow: Test twice nested subworkflow

Test [141/197] workflow_embedded_subworkflow_with_tool_and_subsubworkflow: Test subworkflow of mixed depth with tool first

Test [142/197] workflow_embedded_subworkflow_with_subsubworkflow_and_tool: Test subworkflow of mixed depth with tool after

Test [143/197] workflow_records_inputs_and_outputs: Test record type inputs to and outputs from workflows.

Test [144/197] workflow_integer_input: Test integer workflow input and outputs

Test [145/197] workflow_integer_input_optional_specified: Test optional integer workflow inputs (specified)

Test [146/197] workflow_integer_input_optional_unspecified: Test optional integer workflow inputs (unspecified)

Test [147/197] workflow_integer_input_default_specified: Test default integer workflow inputs (specified)

Test [148/197] workflow_integer_input_default_unspecified: Test default integer workflow inputs (unspecified)

Test [149/197] workflow_integer_input_default_and_tool_integer_input_default: Test default integer tool and workflow inputs (unspecified)

Test [150/197] workflow_file_input_default_unspecified: Test File input with default unspecified to workflow

Test [151/197] workflow_file_input_default_specified: Test File input with default specified to workflow

Test [152/197] clt_optional_union_input_file_or_files_with_array_of_one_file_provided: Test input union type or File or File array to a tool with one file in array specified.

Test [153/197] clt_optional_union_input_file_or_files_with_many_files_provided: Test input union type or File or File array to a tool with a few files in array specified.

Test [154/197] clt_optional_union_input_file_or_files_with_single_file_provided: Test input union type or File or File array to a tool with one file specified.

Test [155/197] clt_optional_union_input_file_or_files_with_nothing_provided: Test input union type or File or File array to a tool with null specified.

Test [156/197] clt_any_input_with_integer_provided: Test Any parameter with integer input to a tool

Test [157/197] clt_any_input_with_string_provided: Test Any parameter with string input to a tool

Test [158/197] clt_any_input_with_file_provided: Test Any parameter with file input to a tool

Test [159/197] clt_any_input_with_mixed_array_provided: Test Any parameter with array input to a tool

Test [160/197] clt_any_input_with_record_provided: Test Any parameter with record input to a tool

Test [161/197] workflow_any_input_with_integer_provided: Test Any parameter with integer input to a workflow

Test [162/197] workflow_any_input_with_string_provided: Test Any parameter with string input to a workflow

Test [163/197] workflow_any_input_with_file_provided: Test Any parameter with file input to a workflow

Test [164/197] workflow_any_input_with_mixed_array_provided: Test Any parameter with array input to a workflow

Test [165/197] workflow_any_input_with_record_provided: Test Any parameter with record input to a tool

Test [166/197] workflow_union_default_input_unspecified: Test union type input to workflow with default unspecified

Test [167/197] workflow_union_default_input_with_file_provided: Test union type input to workflow with default specified as file

Test [168/197] workflowstep_valuefrom_string: Test valueFrom on workflow step from literal (string).

Test [169/197] workflowstep_valuefrom_file_basename: Test valueFrom on workflow step using basename.

Test [170/197] expression_tool_int_array_output: Test output arrays in a tool (with ints).

Test [171/197] workflowstep_int_array_input_output: Test output arrays in a workflow (with ints).

Test [172/197] workflow_file_array_output: Test output arrays in a workflow (with Files).

Test [173/197] docker_entrypoint: Test Docker ENTRYPOINT usage

Test 173 failed: calrissian --max-ram 8G --max-cores 4 --default-container debian:stretch-slim --outdir=/output/tmp4i_2wfjf --quiet v1.0/v1.0/docker-run-cmd.cwl v1.0/v1.0/empty.json
Test Docker ENTRYPOINT usage
Returned non-zero
Test [174/197] clt_file_size_property_with_empty_file: Test use of size in expressions for an empty file

Test [175/197] clt_file_size_property_with_multi_file: Test use of size in expressions for a few files

Test [176/197] any_without_defaults_unspecified_fails: Test Any without defaults, unspecified, should fail.

Test [177/197] any_without_defaults_specified_fails: Test Any without defaults, specified, should fail.

Test [178/197] step_input_default_value_noexp: Test default value on step input parameter, no ExpressionTool

Test [179/197] step_input_default_value_overriden_noexp: Test default value on step input parameter overridden by provided source, no ExpressionTool

Test [180/197] nested_workflow_noexp: Test nested workflow, without ExpressionTool

Test [181/197] wf_multiplesources_multipletypes_noexp: Test step input with multiple sources with multiple types, without ExpressionTool

Test [182/197] dynamic_resreq_wf_optional_file_default: Within a workflow, test accessing the size attribute of an optional input File as part of a CommandLineTool's ResourceRequirement calculation. The CommandLineTool input has a default value (a local file) and the workflow nor the workflow step does not provide any value for this input.

Test [183/197] dynamic_resreq_wf_optional_file_step_default: Within a workflow, test accessing the size attribute of an optional input File as part of a CommandLineTool's ResourceRequirement calculation. The workflow step provides a default value (a local file) for this input and the workflow itself does not provide any value for this input.

Test [184/197] dynamic_resreq_wf_optional_file_wf_default: Within a workflow, test accessing the size attribute of an optional input File as part of a CommandLineTool's ResourceRequirement calculation. The workflow itelf provides a default value (a local file) for this input.

Test [185/197] step_input_default_value_overriden_2nd_step: Test default value on step input parameter overridden by provided source. With passthrough first step

Test [186/197] step_input_default_value_overriden_2nd_step_noexp: Test default value on step input parameter overridden by provided source. With passthrough first step and no ExpressionTool

Test [187/197] step_input_default_value_overriden_2nd_step_null: Test default value on step input parameter overridden by provided source. With null producing first step

Test [188/197] step_input_default_value_overriden_2nd_step_null_noexp: Test default value on step input parameter overridden by provided source. With null producing first step and no ExpressionTool

Test [189/197] stdin_from_directory_literal_with_local_file: Pipe to stdin from user provided local File via a Directory literal

Test [190/197] stdin_from_directory_literal_with_literal_file: Pipe to stdin from literal File via a Directory literal

Test [191/197] directory_literal_with_literal_file_nostdin: Test non-stdin reference to literal File via a Directory literal

Test [192/197] no_inputs_commandlinetool: Test CommandLineTool without inputs

Test [193/197] no_outputs_commandlinetool: Test CommandLineTool without outputs

Test [194/197] no_inputs_workflow: Test Workflow without inputs

Test [195/197] no_outputs_workflow: Test Workflow without outputs

Test [196/197] anonymous_enum_in_array: Test an anonymous enum inside an array inside a record

Test [197/197] schema-def_anonymous_enum_in_array: Test an anonymous enum inside an array inside a record, SchemaDefRequirement

195 tests passed, 1 failures, 1 unsupported features
